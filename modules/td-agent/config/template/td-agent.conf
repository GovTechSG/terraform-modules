{% if config_vars.consul is defined %}
<source>
  @type systemd
  tag services.{{ config_vars.consul.tag }}
  path /var/run/log/journal
  matches [{ "_SYSTEMD_UNIT": "supervisor.service", "SYSLOG_IDENTIFIER": "{{ config_vars.consul.identifier }}" }]
  read_from_head true

  <storage>
    @type local
    persistent yes
    path {{ config_vars.consul.position_file }}
  </storage>
  <entry>
    fields_strip_underscores true
    fields_lowercase true
  </entry>
</source>

{% endif %}
{% if config_vars.consul_template is defined %}
<source>
  @type systemd
  tag services.{{ config_vars.consul_template.tag }}
  path /var/run/log/journal
  matches [{ "_SYSTEMD_UNIT": "supervisor.service", "SYSLOG_IDENTIFIER": "{{ config_vars.consul_template.identifier }}" }]
  read_from_head true

  <storage>
    @type local
    persistent yes
    path {{ config_vars.consul_template.position_file }}
  </storage>
  <entry>
    fields_strip_underscores true
    fields_lowercase true
  </entry>
</source>

{% endif %}
{% if config_vars.nomad is defined %}
<source>
  @type systemd
  tag services.{{ config_vars.nomad.tag }}
  path /var/run/log/journal
  matches [{ "_SYSTEMD_UNIT": "supervisor.service", "SYSLOG_IDENTIFIER": "{{ config_vars.nomad.identifier }}" }]
  read_from_head true

  <storage>
    @type local
    persistent yes
    path {{ config_vars.nomad.position_file }}
  </storage>
  <entry>
    fields_strip_underscores true
    fields_lowercase true
  </entry>
</source>

{% endif %}
{% if config_vars.vault is defined %}
<source>
  @type systemd
  tag {{ config_vars.vault.tag }}
  path /var/run/log/journal
  matches [{ "_SYSTEMD_UNIT": "supervisor.service", "SYSLOG_IDENTIFIER": "{{ config_vars.vault.identifier }}" }]
  read_from_head true

  <storage>
    @type local
    persistent yes
    path {{ config_vars.vault.position_file }}
  </storage>
  <entry>
    fields_strip_underscores true
    fields_lowercase true
  </entry>
</source>

# Parse Vault Audit Logs
<filter {{ config_vars.vault.tag }}>
  @type parser
  format json
  key_name "message"
  inject_key_prefix "vault."
  time_parse true
  <parse>
    @type json
    time_key time
    time_format %Y-%m-%dT%T.%N%Z
    localtime false
    time_type string
    keep_time_key true
  </parse>
</filter>

{% endif %}
{% if config_vars.additionals is defined %}
{% for item in config_vars.additionals %}
<source>
  @type systemd
  tag system.{{ item.tag }}
  path /var/run/log/journal
  matches [{ "SYSLOG_IDENTIFIER": "{{ item.identifier }}" }]
  read_from_head true

  <storage>
    @type local
    persistent yes
    path {{ item.position_file }}
  </storage>
  <entry>
    fields_strip_underscores true
    fields_lowercase true
  </entry>
</source>

{% endfor %}
{% endif %}
{% set match_consul = ' services.' + config_vars.consul.tag if config_vars.consul is defined else '' %}
{% set match_consul_template = ' services.' + config_vars.consul_template.tag if config_vars.consul_template is defined else '' %}
{% set match_nomad = ' services.' + config_vars.nomad.tag if config_vars.nomad is defined else '' %}
{% set match_vault = ' ' + config_vars.vault.tag if config_vars.vault is defined else '' %}
{% set match_additionals = config_vars.additionals | map(attribute='tag') | map('regex_replace', '(.*)', ' system.\\1') | join if config_vars.additionals is defined else '' %}
<match{{ match_consul }}{{ match_consul_template }}{{ match_nomad }}{{ match_vault }}{{ match_additionals }}>
  @type copy

  <store ignore_error>
    @type file

    path /etc/td-agent/logs/${tag}-%Y%m%d
    append true

    <buffer tag, time>
      flush_at_shutdown true
      flush_mode interval
      flush_interval 5s
      retry_forever true
      retry_max_interval 128s
      timekey_use_utc false
    </buffer>
  </store>
  <store>
    @type forward
    compress gzip

    send_timeout 60s
    recover_wait 10s
    hard_timeout 60s

    # Changes semantics to at least once
    require_ack_response true

    # Disallow permanent caching of DNS records
    expire_dns_cache 600s
    dns_round_robin true

    <buffer>
      @type file

      path /etc/td-agent/buffer
      flush_at_shutdown true
      flush_mode interval
      flush_interval 5s
      retry_forever true
      retry_max_interval 128s
      timekey_use_utc false
    </buffer>

    <server>
      name {{ config_vars.server.name }}
      host {{ config_vars.server.host }}
      port {{ config_vars.server.port }}
    </server>
  </store>
</match>
